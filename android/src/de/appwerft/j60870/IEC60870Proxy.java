/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.j60870;

import java.net.InetAddress;
import java.net.UnknownHostException;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;
import org.openmuc.j60870.ASdu;
import org.openmuc.j60870.CauseOfTransmission;
import org.openmuc.j60870.ClientConnectionBuilder;
import org.openmuc.j60870.Connection;
import org.openmuc.j60870.ConnectionEventListener;
import org.openmuc.j60870.IeQualifierOfInterrogation;
import org.openmuc.j60870.IeTime56;

import android.app.Activity;

// This proxy can be created by calling J60870.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = J60870Module.class)
public class IEC60870Proxy extends KrollProxy {
	// Standard Debugging variables
	private static final String LCAT = "J60870";
	// connection params
	private InetAddress address;
	private int port;

	// Constructor
	public IEC60870Proxy() {
		super();
	}

	@Override
	public void handleCreationDict(KrollDict options) {
		super.handleCreationDict(options);
		importFromJSON();
		importOptions(options);
		connect();
		if (options.containsKey("message")) {
			Log.d(LCAT,
					"example created with message: " + options.get("message"));
		}
	}

	private void importOptions(KrollDict opts) {
		if (opts.containsKeyAndNotNull("address")) {
			try {
				InetAddress address = InetAddress.getByName(opts
						.getString("address"));
			} catch (UnknownHostException e) {
				e.printStackTrace();
			}
		}
		if (opts.containsKeyAndNotNull("port")) {
			int port = opts.getInt("port");
		}
	}

	private void importFromJSON() {
	}

	private void connect() {
		Connection conn = new ClientConnectionBuilder(address);
	}
}